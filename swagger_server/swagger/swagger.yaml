---
swagger: "2.0"
info:
  description: "This is the swagger for LockDownMainHealthy at AddSkill."
  version: "1.0.0"
  title: "AddSkill"
  contact:
    email: "akanksha@addskill.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v2"
tags:
- name: "user"
  description: "Operations about user"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "create_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /user/login:
    get:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "login_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
          schema:
            type: "string"
        "401":
          description: "Invalid username/password supplied"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logout_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "get_user_by_name"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "update_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "delete_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /meals:
    post:
      tags:
      - "meal"
      summary: "Add meal"
      description: "This can only be done by the logged in user."
      operationId: "add_meal"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Meal object to Add"
        required: true
        schema:
          $ref: "#/definitions/Meal"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.meal_controller"
  /meals/{meal_id}:
    get:
      tags:
      - "meal"
      summary: "Get meal by meal id"
      description: "Get Meal by specifying the meal ID"
      operationId: "get_meal_by_meal_id"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "meal_id"
        in: "path"
        description: "The meal that needs to be fetched."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Meal"
        "400":
          description: "Invalid meal ID supplied"
        "404":
          description: "Meal not found"
      x-swagger-router-controller: "swagger_server.controllers.meal_controller"
    put:
      tags:
      - "meal"
      summary: "Update Meal entry"
      description: "This can only be done by the logged in user."
      operationId: "update_meal"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "meal_id"
        in: "path"
        description: "meal that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated meal object"
        required: true
        schema:
          $ref: "#/definitions/Meal"
      responses:
        "400":
          description: "Invalid meal supplied"
        "404":
          description: "Meal not found"
      x-swagger-router-controller: "swagger_server.controllers.meal_controller"
    delete:
      tags:
      - "meal"
      summary: "Delete meal entry"
      description: "This can only be done by the logged in user."
      operationId: "delete_meal"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "meal_id"
        in: "path"
        description: "The meal that needs to be deleted."
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid meal id supplied"
        "404":
          description: "Meal not found"
      x-swagger-router-controller: "swagger_server.controllers.meal_controller"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      calories_per_day:
        type: "integer"
        format: "int32"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
    example:
      firstName: "firstName"
      lastName: "lastName"
      password: "password"
      calories_per_day: 6
      userStatus: 1
      phone: "phone"
      id: 0
      email: "email"
      username: "username"
  Meal:
    type: "object"
    properties:
      meal_id:
        type: "integer"
        format: "int64"
      food_name:
        type: "string"
      description:
        type: "string"
      calorie:
        type: "integer"
        format: "int64"
      date:
        type: "string"
      time:
        type: "string"
      is_in_days_limit:
        type: "boolean"
    xml:
      name: "User"
    example:
      date: "date"
      food_name: "food_name"
      is_in_days_limit: true
      calorie: 6
      description: "description"
      time: "time"
      meal_id: 0
